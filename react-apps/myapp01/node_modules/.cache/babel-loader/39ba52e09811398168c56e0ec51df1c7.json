{"ast":null,"code":"var _jsxFileName = \"C:\\\\africa\\\\react-training\\\\react-apps\\\\myapp01\\\\src\\\\components\\\\git-hub\\\\git-hub.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery'; // $  npm install jquery\n\nclass GitHub extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      lastGistUrl: ''\n    };\n  }\n\n  componentDidMount() {\n    // AJAX call\n    $.get(this.props.source, result => {\n      let lastGist = result[0];\n      console.log(\"result[0]: \" + lastGist);\n      this.setState({\n        username: lastGist.owner.login,\n        lastGistUrl: lastGist.html_url\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, this.state.username, \": last gist is \", /*#__PURE__*/React.createElement(\"a\", {\n      href: this.state.lastGistUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 53\n      }\n    }, \"here\"), \".\");\n  }\n\n}\n\nexport default GitHub; // <GitHub source=\"https://api.github.com/users/octocat/gists\" />\n// reconciliation algorithm -- 1950\n// 1. Render -- > update virtual DOM\n// 2. reactDOM --> dumps into actual DOM\n// 3. re-render --> react render updates the virtual DOM by keeping the object\n// 4. React DOM comes in and does the diff, and takes the latest and dumps into actual DOM\n// Best performance?\n// Because the delta is small, and whole actual DOM is not updated, ONLY delta is updated","map":{"version":3,"sources":["C:/africa/react-training/react-apps/myapp01/src/components/git-hub/git-hub.js"],"names":["React","Component","$","GitHub","constructor","props","state","username","lastGistUrl","componentDidMount","get","source","result","lastGist","console","log","setState","owner","login","html_url","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,QAAd,C,CAA2B;;AAG3B,MAAMC,MAAN,SAAqBF,SAArB,CAA8B;AAE1BG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAIH;;AAGDC,EAAAA,iBAAiB,GAAG;AAChB;AACAP,IAAAA,CAAC,CAACQ,GAAF,CAAM,KAAKL,KAAL,CAAWM,MAAjB,EAA0BC,MAAD,IAAY;AACjC,UAAIC,QAAQ,GAAGD,MAAM,CAAC,CAAD,CAArB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAcF,QAA1B;AAEA,WAAKG,QAAL,CAAc;AACVT,QAAAA,QAAQ,EAAEM,QAAQ,CAACI,KAAT,CAAeC,KADf;AAEVV,QAAAA,WAAW,EAAEK,QAAQ,CAACM;AAFZ,OAAd;AAKH,KATD;AAUH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKd,KAAL,CAAWC,QADhB,kCACwC;AAAG,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWE,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADxC,MADJ;AAKH;;AA/ByB;;AAkC9B,eAAeL,MAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["import React, { Component } from 'react';\r\nimport $ from 'jquery' ;   // $  npm install jquery\r\n\r\n\r\nclass GitHub extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            lastGistUrl: ''\r\n        };\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        // AJAX call\r\n        $.get(this.props.source, (result) => {\r\n            let lastGist = result[0];\r\n            console.log(\"result[0]: \"+lastGist)\r\n\r\n            this.setState({\r\n                username: lastGist.owner.login,\r\n                lastGistUrl: lastGist.html_url\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.username}: last gist is <a href={this.state.lastGistUrl}>here</a>.\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GitHub ;\r\n\r\n// <GitHub source=\"https://api.github.com/users/octocat/gists\" />\r\n// reconciliation algorithm -- 1950\r\n// 1. Render -- > update virtual DOM\r\n// 2. reactDOM --> dumps into actual DOM\r\n// 3. re-render --> react render updates the virtual DOM by keeping the object\r\n// 4. React DOM comes in and does the diff, and takes the latest and dumps into actual DOM\r\n\r\n// Best performance?\r\n// Because the delta is small, and whole actual DOM is not updated, ONLY delta is updated"]},"metadata":{},"sourceType":"module"}