{"ast":null,"code":"var _jsxFileName = \"C:\\\\africa\\\\react-training\\\\react-apps\\\\myapp01\\\\src\\\\components\\\\generic-component\\\\generic-component.js\";\nimport React, { Component } from 'react';\n\nclass GenericComponent extends Component {\n  constructor(props) {\n    super(props); // goes to base class\n    // state is another buil-in just like props\n    // if state is to be used, constructor has to be in place\n\n    this.state = {\n      thing: this.props.things\n    };\n    console.log(\"constructor: \", this.props.things);\n  }\n\n  render() {\n    console.log(\"render: \", this.props.things);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }\n    }, \" \", this.props.things, \" \");\n  }\n\n} // default props\n\n\nGenericComponent.defaultProps = {\n  things: \"biscuit\"\n};\nexport default GenericComponent;","map":{"version":3,"sources":["C:/africa/react-training/react-apps/myapp01/src/components/generic-component/generic-component.js"],"names":["React","Component","GenericComponent","constructor","props","state","thing","things","console","log","render","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAGA,MAAMC,gBAAN,SAA+BD,SAA/B,CAAyC;AACrCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CACD;AACd;AACA;;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG;AAApB,KAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA+B,KAAKL,KAAL,CAAWG,MAA1C;AACH;;AAEDG,EAAAA,MAAM,GAAI;AACNF,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAA0B,KAAKL,KAAL,CAAWG,MAArC;AACA,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAO,KAAKH,KAAL,CAAWG,MAAlB,MAAR;AACH;;AAZoC,C,CAczC;;;AACAL,gBAAgB,CAACS,YAAjB,GAAgC;AAAEJ,EAAAA,MAAM,EAAE;AAAV,CAAhC;AAEA,eAAeL,gBAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nclass GenericComponent extends Component {\r\n    constructor(props) {\r\n        super(props); // goes to base class\r\n        // state is another buil-in just like props\r\n        // if state is to be used, constructor has to be in place\r\n        this.state = { thing: this.props.things };\r\n        console.log(\"constructor: \" ,  this.props.things) ;\r\n    }\r\n\r\n    render () {\r\n        console.log(\"render: \" ,  this.props.things) ;\r\n        return( <div> {this.props.things} </div>)\r\n    }\r\n}\r\n// default props\r\nGenericComponent.defaultProps = { things: \"biscuit\" };\r\n\r\nexport default GenericComponent ;"]},"metadata":{},"sourceType":"module"}